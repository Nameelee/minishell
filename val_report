==69557== Memcheck, a memory error detector
==69557== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==69557== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==69557== Command: ./minishell
==69557== Parent PID: 69552
==69557== 
==69576== 
==69576== HEAP SUMMARY:
==69576==     in use at exit: 241,435 bytes in 455 blocks
==69576==   total heap usage: 803 allocs, 348 frees, 274,030 bytes allocated
==69576== 
==69576== 1,748 bytes in 107 blocks are definitely lost in loss record 48 of 83
==69576==    at 0x4846828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==69576==    by 0x110F05: ft_substr (in /home/ast/mininamee/minishell)
==69576==    by 0x10AD6E: ft_extract_var (environnement_variable_tools.c:39)
==69576==    by 0x10FF99: is_expendable_variable (expand.c:239)
==69576==    by 0x10F616: execute_ast (exec.c:306)
==69576==    by 0x10F1F8: execute_ast (exec.c:224)
==69576==    by 0x10E827: ft_read_line (parser.c:148)
==69576==    by 0x10E861: ft_start_minishell (parser.c:160)
==69576==    by 0x109748: main (main.c:57)
==69576== 
==69576== LEAK SUMMARY:
==69576==    definitely lost: 1,748 bytes in 107 blocks
==69576==    indirectly lost: 0 bytes in 0 blocks
==69576==      possibly lost: 0 bytes in 0 blocks
==69576==    still reachable: 239,687 bytes in 348 blocks
==69576==         suppressed: 0 bytes in 0 blocks
==69576== Reachable blocks (those to which a pointer was found) are not shown.
==69576== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==69576== 
==69576== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==69601== 
==69601== HEAP SUMMARY:
==69601==     in use at exit: 239,869 bytes in 355 blocks
==69601==   total heap usage: 789 allocs, 434 frees, 273,541 bytes allocated
==69601== 
==69601== 70 (64 direct, 6 indirect) bytes in 1 blocks are definitely lost in loss record 25 of 84
==69601==    at 0x4846828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==69601==    by 0x10CD50: ft_new_token_node (tokenize.c:195)
==69601==    by 0x10D3E0: ft_tokenize (tokenize.c:326)
==69601==    by 0x10DD2C: ft_parse (tokenize.c:827)
==69601==    by 0x10E7A1: ft_read_line (parser.c:125)
==69601==    by 0x10E861: ft_start_minishell (parser.c:160)
==69601==    by 0x109748: main (main.c:57)
==69601== 
==69601== LEAK SUMMARY:
==69601==    definitely lost: 64 bytes in 1 blocks
==69601==    indirectly lost: 6 bytes in 1 blocks
==69601==      possibly lost: 0 bytes in 0 blocks
==69601==    still reachable: 239,799 bytes in 353 blocks
==69601==         suppressed: 0 bytes in 0 blocks
==69601== Reachable blocks (those to which a pointer was found) are not shown.
==69601== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==69601== 
==69601== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==69557== 
==69557== HEAP SUMMARY:
==69557==     in use at exit: 233,367 bytes in 251 blocks
==69557==   total heap usage: 807 allocs, 556 frees, 274,107 bytes allocated
==69557== 
==69557== 206 (128 direct, 78 indirect) bytes in 2 blocks are definitely lost in loss record 38 of 88
==69557==    at 0x4846828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==69557==    by 0x10CD50: ft_new_token_node (tokenize.c:195)
==69557==    by 0x10D3E0: ft_tokenize (tokenize.c:326)
==69557==    by 0x10DD2C: ft_parse (tokenize.c:827)
==69557==    by 0x10E7A1: ft_read_line (parser.c:125)
==69557==    by 0x10E861: ft_start_minishell (parser.c:160)
==69557==    by 0x109748: main (main.c:57)
==69557== 
==69557== LEAK SUMMARY:
==69557==    definitely lost: 128 bytes in 2 blocks
==69557==    indirectly lost: 78 bytes in 4 blocks
==69557==      possibly lost: 0 bytes in 0 blocks
==69557==    still reachable: 233,161 bytes in 245 blocks
==69557==         suppressed: 0 bytes in 0 blocks
==69557== Reachable blocks (those to which a pointer was found) are not shown.
==69557== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==69557== 
==69557== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
